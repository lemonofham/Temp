#include <string>
#include <iostream>
#include <vector>
using namespace std;
 
string grid
vector<pair<int, int>> coordinates;
vector<pair<int, int>> findSquareTargets(string grid) {
    int n = 50;
    int target_size = 5;

/*     // remove /n and spaces
    string continuous_grid;
        for (char c : grid) {
            if (c != ' ' && c != '\n') {
                continuous_grid += c;
            }
        }
    grid = continuous_grid; */
/*     RCLCPP_INFO(this->get_logger(), "continous occupancy grid:\n%s", grid.c_str());
    RCLCPP_INFO(this->get_logger(), "grid size is :%s", grid..size()); */
    // traverse the grid row by row, column by column
    for (int row = 0; row <= n - target_size; row++) {
        for (int col = 0; col <= n - target_size; col++) {
            bool found_target = true;

            // check for target matrix
            for (int i = 0; i < target_size; i++) {
                for (int j = 0; j < target_size; j++) {
                    if (grid[(row + i) * n + (col + j)] != '1') {
                        found_target = false; // mismatch, break
                        break;
                    }
                }
                if (!found_target) break; // outer loop exit karo 
            }

            if (found_target) {
/*                 cout << "Found a square target at top-left: (" << row+1 << ", " << col+1 << ")" << endl;*/            
                    coordinates.push_back({row,col});
            }
        }
    }
    return coordinates;
}

int main() {
    findSquareTargets(grid);
    // output coordinates
    cout << coordinates[0].first << " , " << coordinates[0].second <<endl;
    return 0;
}

